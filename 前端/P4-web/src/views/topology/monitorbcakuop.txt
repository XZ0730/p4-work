<template>   
    <div class="Box"> 
  
      <div class="line1">
        <!-- <button @click="changeId()"></button> -->
        <button type="button" class="btn btn-primary" @click="changeId()">查询</button>
      </div>
  
  
      <div ref="mychart" id = "myDiv"></div>
      
      
    </div>
  
    
  
</template>
  
<script>
  
  import * as echarts from 'echarts';
  
  import $ from "jquery"
  import { useStore } from 'vuex';
  export default{
    setup () {
      const store = useStore();
      
      const changeId = () => {
        let switchId = 1;
        store.commit("updateId", switchId);
      }
  
      return {
        changeId
      }
    },
  
    mounted(){
      const store = useStore();
  
      let data = [];
      let legendArr = [];
      let optionSeries = [];
      let portNum;
      let first = 1;
        let myChart = echarts.init(this.$refs.mychart);
        let option;
        let now = new Date();
  
        function randomData() {
  
          // console.log("last" + last_id);
          if(first === 1){
            first = 0;
            console.log("first!!!!!!!!!");
            optionSeries = [];
            legendArr = [];
            data = [];
          // 获取端口数
            $.ajax({
  
              //url:http://localhost:8080/stats/port/1
  
                url: "http://127.0.0.1:5500/src/views/topology/monitorTest.json",
                type: "get",
                data: {
                },
                success(resp) {
                  console.log("success");
                  console.log(resp);
                  var jsonArr = Object.keys(resp)
                  portNum = jsonArr.length;
                  console.log("portNum:" + portNum);
                  for(let i = 0; i < portNum; i ++){
                    let t = "";
                    for (const myString in resp[i]) {
                      legendArr.push(myString);
                      t = myString;
                    }
                    // legendArr.push('port' + i.toString());
                    optionSeries.push({
                      // name:'port' + i.toString(),
                      name:t,
                      type: 'line',
                      showSymbol: false,
                      // smooth:true,
                    });
                  }
                  // console.log(optionSeries);
                },
                error(resp) {
                    console.log("err" + resp);
                }
            });
        }
  
          // console.log(optionSeries);
          let newData = [];
          now = new Date();
          // console.log([now.getHours(), now.getMinutes(), now.getSeconds()].join(':'));
          // console.log(time);
          // console.log(portNum);
          // time.push([now.getHours(), now.getMinutes(), now.getSeconds()].join(':'));
          
          newData.push([now.getHours(), now.getMinutes(), now.getSeconds()].join(':'));
          for(let i = 0; i < 9; i ++){  //这里portNum改为9即可运行
              $.ajax({
                url: "http://127.0.0.1:5500/src/views/topology/monitorTest.json",
                type: "get",
                data: {
                },
                success(resp) {
                  // var arr = Object.keys(data[i]);
                  
                  if(data.length >= 10) {
                    data.shift();
                  }
                  // if(time.length >= 1000){
                  //   time.shift();
                  // }
                    let obj = resp[i];
                    for (const myString in obj) {
                      newData.push(obj[myString] * 1000000);
                      // console.log(obj[myString]); // 输出数字属性
                    }
  
  
                },
                error(resp) {
                    console.log(resp);
                }
            });
  
          }
          
          data.push(newData);
          // console.log("newDataLen" + newData.length);
          console.log(data);
  
          option = {
          title: {
            left: 'center',
            text: '流量',
            textStyle: {
                  color: "black",
                  fontSize: 30,
            },
  
          },
          dataset:{
            source: data
          },
  
          xAxis: { type: 'category' },
          yAxis: { 
            name:'bps',
            nameTextStyle:{
                    fontSize:20
                },
              type: 'value',
              boundaryGap: [0, '100%'],
              splitLine: {
                show: true
              }
          },
          legend: {
            padding: [100, 800, 0, 0], // 上右下左
            data: legendArr,
          },
          series: optionSeries,
          tooltip:{
            show:'true',
            trigger:"axis",
          }
        };
      }
        
      setInterval(function () {
  

        if(store.state.switchs.switchId !== 0){
  
          randomData();
          // 除去第一个可能出现的无效数据
          if( data[0].length < data[1].length) data.shift();
          myChart.setOption(option);
  
        }
        
      }, 1000);
  
      option && myChart.setOption(option);
    }
  }
  
  
  
  
  </script>
  
  <style scoped>
  .Box{
    width: 100%;
    height: 90vh;
  }
  #myDiv{
    width:100%;
    height: 80vh;
  }
  .line1{
    display: flex;
    align-items: center;
    height: 10vh;
    margin-left: 20px;
  }
  .line1>input{
    width: 200px;
    height: 30px;
    padding: 0px 20px;
  }
  .line1>button{
    width: 100px;
    height: 40px;
    font-size: 20px;
  }
  
  </style>
  